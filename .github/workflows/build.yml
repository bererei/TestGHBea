# Actions crea contenedores para ejecutar las acciones.
# Cuando se salta actions SIEMPRE se ejecuta lo mismo para todos (versiones...)
# Microsoft es dueño de GitHub. Cuando hacemos un push en sus data centers se ejecuta.
# https://docs.github.com/en/actions

name: Building  # Nombre del workflow
on:  # Cuando se ejecuta ( ${{ github.event_name }} )
  push:
    tags:  # Building.yml solo se ejecutará en push cuando tiene este formato de etiqueta. Si no etiquetamos el commit no se ejecuta.
      - "v*.*.*"
jobs: # Solo vamos a crear un job.
  building:
    runs-on: ubuntu-latest  # Job will run on: ${{ runner.os }}
    steps:  # A diferencia de los workflows no se pueden ejecutar en paralelo, sino secuencial
      - uses: actions/checkout@v3  # Checks out repository (TestGHBea) code. Descargar el repositorio, el código que hay detrás para hacer esto está en https://github.com/actions/checkout. Puede configuarse modificando las variables. Branch: ${{ github.ref }} y el Repository: ${{ github.repository }}
      - uses: actions/setup-python@v4    # Acción que instala python: github.com/-actions/setup-python
        with:
          python-version: "3.10"
      - name: Install Poetry Action  # https://github.com/marketplace/actions/install-poetry-action
        uses: snok/install-poetry@v1.3.1
      - name: Install dependences
        run: poetry install
      - name: Testing
        run: poetry run pytest
      
      - run: poetry build  # run ejecuta comando de consola en el repo. Comando para empaquetar con poetry.
      - name: Publish to GH Releases  # https://github.com/marketplace?type=: publish release. BEST: https://github.com/softprops/action-gh-release. VER: https://github.com/softprops/action-gh-release#-customizing
        uses: softprops/action-gh-release@v1
        with:  # carpeta de trabajo/carpeta dist/* (todos los fichero en la carpeta)
          files: ${{ github.workspace }}/dist/*

      
      